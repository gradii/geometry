// mixins for button
// ------------------------
@mixin button-size($btn-height, $padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding     : $padding-y $padding-x;
  font-size   : $font-size;
  height      : $btn-height;
  line-height : $line-height;
  @if (
    unit($btn-height) == unit($padding-y)
    and unit($padding-y) == unit($font-size)
    and unitless($line-height)
    and abs($font-size*$line-height+2*$padding-y - $btn-height) > 0.3) {
    @warn "the `$font-size*$line-height+2*$padding-y - $btn-height`("abs($font-size*$line-height+2*$padding-y - $btn-height)") is over 0.3, this means that maybe you line-height or padding-y is too high"
  }

  @if $enable-rounded {
    @include border-radius($border-radius);
  }
}

@mixin button-disabled() {
  &.disabled, &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      @include button-color($btn-disable-color, $btn-disable-bg, $btn-disable-border);
    }
  }
}

@mixin button-variant-primary($color, $background, $border: $background) {
  @include button-color($color, $background, $border);
  &:hover, &:focus {
    @include button-color($color, color-palette($background, 5), color-palette($border, 5));
  }

  &:active,
  &.active {
    @include button-color($color, color-palette($background, 7), color-palette($border, 7));
  }

  @include button-disabled();
}

@mixin button-variant-other($color, $background, $border) {
  @include button-color($color, $background, $border);

  &:hover,
  &:focus {
    @include button-color($primary-color, $background, $primary-color);
  }

  &:active,
  &.active {
    @include button-color($primary-7, $background, $primary-7);
  }

  @include button-disabled();
}

@mixin button-variant-danger($color, $background, $border) {
  @include button-color($color, $background, $border);

  &:hover,
  &:focus {
    @include button-color($btn-primary-color, $color, $color);
  }

  &:active,
  &.active {
    @include button-color($btn-primary-color, color-palette($color, 7), color-palette($color, 7));
  }

  @include button-disabled();
}

@mixin button-variant-ghost($color) {
  @include button-color($color, transparent, $color);

  &:hover,
  &:focus {
    @include button-color(color-palette($color, 5), transparent, color-palette($color, 5));
  }

  &:active,
  &.active {
    @include button-color(color-palette($color, 7), transparent, color-palette($color, 7));
  }

  @include button-disabled();
}

@mixin button-color($color, $background, $border) {
  color            : $color;
  background-color : $background;
  border-color     : $border;
  // a inside Button which only work in Chrome
  // http://stackoverflow.com/a/17253457
  > a:only-child {
    color : currentColor;
    &:after {
      content    : '';
      position   : absolute;
      top        : 0;
      left       : 0;
      bottom     : 0;
      right      : 0;
      background : transparent;
    }
  }
}

@mixin button-group-base($btnClassName) {
  position : relative;
  display  : inline-flex;
  > .#{$btnClassName} {
    position : relative;
    z-index  : 1;

    &:hover,
    &:focus,
    &:active,
    &.active {
      z-index : 2;
    }

    &:disabled {
      z-index : 0;
    }
  }

  // size
  &-lg > .#{$btnClassName} {
    @include button-size($btn-height-lg,
      $btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, $btn-border-radius-base);
  }

  &-sm > .#{$btnClassName} {
    @include button-size($btn-height-sm,
      $btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
    > .#{$iconfont-css-prefix} {
      font-size : $font-size-base,
    }
  }
}

// Base styles of buttons
// --------------------------------------------------
@mixin btn() {
  display          : inline-block;
  margin-bottom    : 0;
  font-weight      : $btn-font-weight;
  text-align       : center;
  touch-action     : manipulation;
  cursor           : pointer;
  background-image : none;
  border           : $border-width-base $border-style-base transparent;
  white-space      : nowrap;
  @include button-size($btn-height-base,
    $btn-padding-y-base, $btn-padding-x-base, $btn-font-size-base, $btn-line-height-base, $btn-border-radius-base);
  user-select      : none;
  vertical-align   : middle;
  transition       : all .3s $ease-in-out;
  position         : relative;

  > .#{$iconfont-css-prefix} {
    line-height : 1;
  }

  &,
  &:active,
  &:focus {
    outline : 0;
  }

  &:not([disabled]):hover {
    text-decoration : none;
  }

  &:not([disabled]):active {
    outline    : 0;
    transition : none;
  }

  &.disabled,
  &[disabled] {
    cursor : not-allowed;
    > * {
      pointer-events : none;
    }
  }

  &-lg {
    @include button-size($btn-height-lg,
      $btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, $btn-border-radius-base);
  }

  &-sm {
    @include button-size($btn-height-sm,
      $btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
  }

  //& + & {
  //  margin-left: 4px;
  //  margin-top: 4px;
  //}
}

// primary button style
@mixin btn-primary() {
  @include button-variant-primary($btn-primary-color, $btn-primary-bg);
}

// default button style
@mixin btn-default() {
  @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);
  &:hover,
  &:focus,
  &:active,
  &.active {
    background : #fff;
  }
}

// ghost button style
@mixin btn-ghost() {
  @include button-variant-other($btn-ghost-color, $btn-ghost-bg, $btn-ghost-border);
}

// dashed button style
@mixin btn-dashed() {
  @include button-variant-other($btn-default-color, $btn-default-bg, $btn-default-border);
  border-style : dashed;
}

@mixin btn-success() {
  @include button-variant-primary($btn-success-color, $btn-success-bg);
}

@mixin btn-warning() {
  @include button-variant-primary($btn-warning-color, $btn-warning-bg);
}

// danger button style
@mixin btn-danger() {
  @include button-variant-danger($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}

// circle button: the content only contains icon
@mixin btn-circle($btnClassName: btn) {
  @include square($btn-circle-size);
  @include button-size($btn-circle-size,
    0, 0, $btn-font-size-base, $btn-line-height-base, 50%);

  &.#{$btnClassName}-lg {
    @include square($btn-circle-size-lg);
    @include button-size($btn-circle-size-lg,
      0, 0, $btn-font-size-lg * 1.125, $btn-line-height-lg, 50%);
  }

  &.#{$btnClassName}-sm {
    @include square($btn-circle-size-sm);
    @include button-size($btn-circle-size-sm,
      0, 0, $btn-font-size-sm, $btn-line-height-sm, 50%);
  }
}

// Horizontal button groups styl
// --------------------------------------------------
@mixin btn-group($btnClassName: btn) {
  @include button-group-base($btnClassName);

  .#{$btnClassName} + .#{$btnClassName},
  .#{$btnClassName} + &,
  & + .#{$btnClassName},
  & + & {
    margin-left : -1px;
  }

  .#{$btnClassName}:not(:first-child):not(:last-child) {
    border-radius : 0;
    padding-left  : 8px;
    padding-right : 8px;
  }

  > .#{$btnClassName}:first-child {
    margin-left : 0;
    &:not(:last-child) {
      border-bottom-right-radius : 0;
      border-top-right-radius    : 0;
      padding-right              : 8px;
    }
  }

  > .#{$btnClassName}:last-child:not(:first-child) {
    border-bottom-left-radius : 0;
    border-top-left-radius    : 0;
    padding-left              : 8px;
  }

  & > & {
    float : left;
  }

  & > &:not(:first-child):not(:last-child) > .#{$btnClassName} {
    border-radius : 0;
  }

  & > &:first-child:not(:last-child) {
    > .#{$btnClassName}:last-child {
      border-bottom-right-radius : 0;
      border-top-right-radius    : 0;
      padding-right              : 8px;
    }
  }

  & > &:last-child:not(:first-child) > .#{$btnClassName}:first-child {
    border-bottom-left-radius : 0;
    border-top-left-radius    : 0;
    padding-left              : 8px;
  }
}

@mixin btn-group-border ($btn-group-class: btn-group, $btn-group-border: $btn-group-border, $btn-default-border: $btn-default-border) {
  @at-root #{$btn-group-class} &:not(:first-child):not(:last-child) {
    border-right-color : $btn-group-border;
    border-left-color  : $btn-group-border;

    @at-root &:disabled {
      border-color : $btn-default-border;
    }
  }

  @at-root #{$btn-group-class} &:first-child {
    @at-root &:not(:last-child) {
      border-right-color : $btn-group-border;
      @at-root &[disabled] {
        border-right-color : $btn-default-border;
      }
    }
  }

  @at-root
  #{$btn-group-class} &:last-child:not(:first-child),
  #{$btn-group-class} & + & {
    border-left-color : $btn-group-border;
    @at-root &[disabled] {
      border-left-color : $btn-default-border;
    }
  }
}
