load("@build_bazel_rules_nodejs//:index.bzl", "pkg_web")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("//tools:create-system-config.bzl", "create_system_config")
load("//tools:defaults.bzl", "ng_module", "sass_binary")
load("//tools:es5-named-output.bzl", "es5_named_output")
load("//tools/dev-server:index.bzl", "dev_server")

package(default_visibility = ["//visibility:public"])

ng_module(
    name = "dev-app",
    srcs = [
        "dev-app.ts",
        "main.ts",
        "main-module.ts",
    ],
    deps = [
        "//src/dev-app/dev-app",
        "//src/dev-app/input-number",
        "@npm//@angular/cdk",
        "@npm//@angular/router",
        "@npm//date-fns",
    ],
)

rollup_bundle(
    name = "date-fns_bundle.umd",
    srcs = ["@npm//date-fns"],
    config_file = ":rollup.config.js",
    entry_point = "@npm//:node_modules/date-fns/esm/index.js",
    format = "umd",
)

sass_binary(
    name = "theme",
    src = "theme.scss",
    include_paths = [
        "external/npm/node_modules",
    ],
    deps = [
        "//src/triangle/core:theming_scss_lib",
    ],
)

create_system_config(
    name = "system-config",
    output_name = "system-config.js",
)

# File group for all static files which are needed to serve the dev-app. These files are
# used in the devserver as runfiles and will be copied into the static web package that can
# be deployed on static hosting services (like firebase).
filegroup(
    name = "dev_app_static_files",
    srcs = [
        "favicon.ico",
        "index.html",
        ":date-fns_bundle.umd",
        ":system-config",
        ":theme",
        "//tools:system-rxjs-operators.js",
        "@npm//:node_modules/@webcomponents/custom-elements/custom-elements.min.js",
        "@npm//:node_modules/core-js-bundle/index.js",
        "@npm//:node_modules/moment/min/moment-with-locales.min.js",
        "@npm//:node_modules/rxjs/bundles/rxjs.umd.min.js",
        "@npm//:node_modules/systemjs/dist/system.js",
        "@npm//:node_modules/tslib/tslib.js",
        "@npm//:node_modules/zone.js/dist/zone.js",
    ],
)

dev_server(
    name = "devserver",
    srcs = [":dev_app_static_files"],
    additional_root_paths = [
        "npm/node_modules",
        # Needed for compatibility with "pkg_web" which always uses the tree
        # artifact output as workspace root.
        "triangle_workspace",
    ],
    tags = ["manual"],
    deps = [
        ":dev-app",
    ],
)

# Collects all ES5 JavaScript files which are required to serve the dev-app. By default,
# ts_library and ng_module targets only expose the type definition files as outputs.
es5_named_output(
    name = "dev_app_js_sources",
    tags = ["manual"],
    deps = [":dev-app"],
)

# Target that builds a static web package of the dev-app. The web package can be
# deployed on static hosting services (such as firebase).
pkg_web(
    name = "web_package",
    srcs = [
        ":dev_app_js_sources",
        ":dev_app_static_files",
    ],
    additional_root_paths = [
        "npm/node_modules",
    ],
    tags = ["manual"],
)
